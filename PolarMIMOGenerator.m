function output = PolarMIMOGenerator(n, LEN, N, K, R, qamBitSize, qamTab, precode, H)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Simulate polar coding of bits in MIMO systems.
% Optionally can apply SVD precoding based on known channel matrix
%
% Inputs:
%   n - number of antennas.
%   LEN - number of symbols per antenna
%   N - number of bits after encoding per symbol
%   K - number of bits per symbol per antenna
%   R - polar coding rate
%       e.g. K=16, R=.5 -> 32 bits output of polar codes
%   qamBitSize - # of bits encoded into the QAM, e.g. 1 -> +/- 1 -> 2QAM/BPSK
%   qamTab - the table generated by ConstellationTable.m
%   precode - a binary flag for SVD precoding
%   H - the known channel, if available, used for precoding
%
%   Output - MIMO signal about to be transmitted
%
%   Example: PolarMIMOGenerator(4,4,1,1,1,ones(4))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Create constallation table
qamTable = qamTab.table;

data = zeros(n, K, LEN); % antennas, bits, nMessages
enc = zeros(n, N, LEN); %antennas, polarized bits, nMessages
output = zeros(n, LEN*N/qamBitSize); 

if (precode)
    [U,D,V] = svd(H);
end


for (kk = 1 : LEN)
    data(:,:,kk) = randi([0, 1], n, K); %generate bits
    for (i = 1 : n)
        enc(i,:,kk) = pencode(data(i,:,kk));
    end

end

enc = reshape(enc, n, LEN*N/qamBitSize, qamBitSize);

for (k = 1:n)
    msg = squeeze(enc(k,:,:)); 
    indices = bi2de(msg)+1;
    output(k,:) = qamTable(indices);
end

if (precode)
    output = V.*output;
end

end

